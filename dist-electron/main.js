"use strict";const r=require("electron"),a=require("path"),i=require("fs"),u=process.env.NODE_ENV==="development";function f(){const e=new r.BrowserWindow({width:1200,height:800,minWidth:1e3,minHeight:700,title:"ManyJson - JSON Schema Manager",backgroundColor:r.nativeTheme.shouldUseDarkColors?"#0a0a0a":"#ffffff",webPreferences:{preload:a.join(__dirname,"preload.js"),contextIsolation:!0,sandbox:!0,nodeIntegration:!1}});return u?(e.loadURL("http://localhost:5173"),e.webContents.openDevTools()):e.loadFile(a.join(__dirname,"../dist/index.html")),e}function w(){const e=r.app.getPath("userData");return a.join(e,"schemas")}async function c(){const e=w();try{return await i.promises.mkdir(e,{recursive:!0}),e}catch(o){throw console.error("Failed to create config directory:",o),o}}r.ipcMain.handle("write-json-file",async(e,o,n)=>{try{return await i.promises.writeFile(o,n,"utf8"),{success:!0}}catch(t){return console.error("Failed to write file:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}});r.ipcMain.handle("get-config-directory",async()=>{try{return{success:!0,path:await c()}}catch(e){return console.error("Failed to get config directory:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error"}}});r.ipcMain.handle("write-config-file",async(e,o,n)=>{try{const t=await c(),s=a.join(t,o);return await i.promises.writeFile(s,n,"utf8"),{success:!0,filePath:s}}catch(t){return console.error("Failed to write config file:",t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}});r.ipcMain.handle("list-config-files",async()=>{try{const e=await c(),n=(await i.promises.readdir(e)).filter(s=>s.endsWith(".json"));return{success:!0,files:await Promise.all(n.map(async s=>{const l=a.join(e,s),d=await i.promises.readFile(l,"utf8");return{name:s,path:l,content:JSON.parse(d)}}))}}catch(e){return console.error("Failed to list config files:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error"}}});r.ipcMain.handle("show-open-dialog",async(e,o)=>{try{return await r.dialog.showOpenDialog(o)}catch(n){return console.error("Failed to show open dialog:",n),{canceled:!0,filePaths:[]}}});r.ipcMain.handle("show-save-dialog",async(e,o)=>{try{return await r.dialog.showSaveDialog(o)}catch(n){return console.error("Failed to show save dialog:",n),{canceled:!0,filePath:void 0}}});r.ipcMain.handle("delete-file",async(e,o)=>{try{return await i.promises.unlink(o),{success:!0}}catch(n){return console.error("Failed to delete file:",n),{success:!1,error:n instanceof Error?n.message:"Unknown error"}}});r.app.whenReady().then(()=>{f(),r.app.on("activate",()=>{r.BrowserWindow.getAllWindows().length===0&&f()})});r.app.on("window-all-closed",()=>{process.platform!=="darwin"&&r.app.quit()});r.app.on("web-contents-created",(e,o)=>{o.on("new-window",(n,t)=>{n.preventDefault(),console.warn("Blocked new window creation:",t)})});
