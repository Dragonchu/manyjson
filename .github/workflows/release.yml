name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'v0.2.0'

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: mac
          - os: windows-latest
            platform: win
          - os: ubuntu-latest
            platform: linux

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Build Electron app
        run: npm run electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: find artifacts -type f -name "*" | head -20

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name || github.event.inputs.version }}
          name: Release ${{ github.ref_name || github.event.inputs.version }}
          body: |
            ## ManyJson Release ${{ github.ref_name || github.event.inputs.version }}
            
            JSON Schema Manager built with Vue 3 and Electron
            
            ## Downloads
            
            - **macOS**: Download the `.dmg` file for installation or `.zip` for portable version
            - **Windows**: Download the `.exe` file for installation 
            - **Linux**: Download the `.AppImage` for portable use
            
            ## Features
            
            - JSON file management and validation
            - Schema validation with AJV
            - Cross-platform desktop application
            
          draft: false
          prerelease: false
          files: |
            artifacts/mac-build/*.dmg
            artifacts/mac-build/*.zip
            artifacts/win-build/*.exe
            artifacts/linux-build/*.AppImage